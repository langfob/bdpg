% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_and_parse_Xu_set_cover_problem_file.R
\name{read_Xu_problem_from_Xu_file}
\alias{read_Xu_problem_from_Xu_file}
\title{Read a Xu benchmark problem formatted according to the format proposed by Xu.}
\usage{
read_Xu_problem_from_Xu_file(infile_name, correct_solution_cost)
}
\arguments{
\item{infile_name}{File path describing a Xu problem}

\item{correct_solution_cost}{Numeric value of cost of solution (since
problems read from one of Xu's benchmark files have their cost given
somewhere other than in the file)}
}
\value{
RETURN_DESCRIPTION
}
\description{
Xu defined a file format for storing benchmark problems created using his
method.  This format stores attributes of the problem, but doesn't store
the correct solution or the parameters used to create the problem.
bdpg can still use these files and problems as inputs to create a problem
that can be used as input to reserve selectors.  The names of the files
provided by Xu contain the cost of the correct solution even though no
information is given about which nodes provide that solution.
Consequently, you can know the cost of the solution that should be returned
by the reserve selector, but not know the solution itself.  This means
that you can also generate apparent solutions as well, since they generally
don't need to know what nodes were in the correct solution.  However,
it means that you can't generate wrapped problems using the benchmark
problems because the wrapping (at least right now) relies on knowing which
nodes are in the correct solution.
}
\examples{
# ADD_EXAMPLES_HERE

}
