% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_wrapped_bdprob.R
\name{wrap_abundance_dist_around_Xu_problem}
\alias{wrap_abundance_dist_around_Xu_problem}
\title{Wrap abundance distribution around Xu problem}
\usage{
wrap_abundance_dist_around_Xu_problem(starting_dir, rounded_abundances,
  Xu_bdprob, dep_set_PUs_eligible, tot_num_PUs_in_landscape, bdpg_error_codes,
  wrap_prob_name_stem = "wrap_prob", cor_dir_name_stem = "cor")
}
\arguments{
\item{starting_dir}{character string}

\item{rounded_abundances}{DESCRIPTION.}

\item{Xu_bdprob}{DESCRIPTION.}

\item{dep_set_PUs_eligible}{DESCRIPTION.}

\item{tot_num_PUs_in_landscape}{DESCRIPTION.}
}
\value{
Returns wrapped_bdprob
}
\description{
Wrap abundance distribution around Xu problem
}
\section{Local Variable Structures and examples}{

Here is the output of str() for each variable visible in the function.
Note that the particular counts and values given are just examples to show
what the data might look like.

\subsection{all_PU_IDs}{
\preformatted{
all_PU_IDs :  int [1:407] 1 2 3 4 5 6 7 8 9 10 ...
}}
\subsection{all_spp_IDs}{
\preformatted{
all_spp_IDs :  int [1:1277] 1 2 3 4 5 6 7 8 9 10 ...
}}
\subsection{bdpg_error_codes}{
\preformatted{
bdpg_error_codes : List of 6
 $ ERROR_STATUS_num_inside_or_within_group_links_less_than_one: num 1001
 $ ERROR_STATUS_optimal_solution_is_not_optimal               : num 1002
 $ ERROR_STATUS_num_nodes_per_group_must_be_at_least_2        : num 1003
 $ ERROR_STATUS_duplicate_spp_in_Xu_input_file                : num 1004
 $ ERROR_STATUS_unknown_spp_occ_FP_error_type                 : num 1005
 $ ERROR_STATUS_unknown_spp_occ_FN_error_type                 : num 1006
}}
\subsection{cor_dir_name_stem}{
\preformatted{
cor_dir_name_stem :  chr "cor"
}}
\subsection{dep_set_PUs_eligible}{
\preformatted{
dep_set_PUs_eligible :  logi FALSE
}}
\subsection{eligible_PUs}{
\preformatted{
eligible_PUs :  int [1:285] 123 124 125 126 127 128 129 130 131 132 ...
}}
\subsection{extra_nodes}{
\preformatted{
extra_nodes : 'data.frame':	285 obs. of  3 variables:
 $ node_ID             : int  123 124 125 126 127 128 129 130 131 132 ...
 $ group_ID            : logi  NA NA NA NA NA NA ...
 $ dependent_set_member: logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
}}
\subsection{extra_PUs}{
\preformatted{
extra_PUs :  int [1:285] 123 124 125 126 127 128 129 130 131 132 ...
}}
\subsection{largest_PU_ID}{
\preformatted{
largest_PU_ID :  int 122
}}
\subsection{num_extra_PUs}{
\preformatted{
num_extra_PUs :  int 285
}}
\subsection{num_used_extra_PUs}{
\preformatted{
num_used_extra_PUs :  int 271
}}
\subsection{rounded_abundances}{
\preformatted{
rounded_abundances :  num [1:1628] 2 2 1 1 3 1 3 2 2 1 ...
}}
\subsection{starting_dir}{
\preformatted{
starting_dir :  chr "/Users/bill/tzar/outputdata/biodivprobgen/default_runset/1837_marxan_simulated_annealing.inprogress"
}}
\subsection{tot_num_PUs_in_landscape}{
\preformatted{
tot_num_PUs_in_landscape :  num 407
}}
\subsection{unique_wrapped_PUs}{
\preformatted{
unique_wrapped_PUs :  num [1:393] 1 2 3 4 5 6 7 8 9 10 ...
}}
\subsection{unique_wrapped_spp}{
\preformatted{
unique_wrapped_spp :  num [1:1277] 1 2 3 4 5 6 7 8 9 10 ...
}}
\subsection{used_extra_PUs}{
\preformatted{
used_extra_PUs :  num [1:271] 123 124 125 126 127 128 129 130 131 132 ...
}}
\subsection{wrap_prob_name_stem}{
\preformatted{
wrap_prob_name_stem :  chr "wrap_prob"
}}
\subsection{wrapped_bdprob}{
\preformatted{
wrapped_bdprob : Formal class 'Xu_wrapped_bd_problem' [package "bdpg"] with 36 slots
}}
\subsection{wrapped_bpm}{
\preformatted{
wrapped_bpm :  num [1:1277, 1:407] 1 0 0 0 0 0 0 0 0 0 ...
}}
\subsection{wrapped_highest_PU_ID}{
\preformatted{
wrapped_highest_PU_ID :  num 407
}}
\subsection{wrapped_highest_spp_ID}{
\preformatted{
wrapped_highest_spp_ID :  num 1277
}}
\subsection{wrapped_nodes}{
\preformatted{
wrapped_nodes : 'data.frame':	407 obs. of  3 variables:
 $ node_ID             : int  1 2 3 4 5 6 7 8 9 10 ...
 $ group_ID            : num  1 1 2 2 3 3 4 4 5 5 ...
 $ dependent_set_member: logi  FALSE TRUE FALSE TRUE FALSE TRUE ...
}}
\subsection{wrapped_num_PUs}{
\preformatted{
wrapped_num_PUs :  num 407
}}
\subsection{wrapped_num_spp}{
\preformatted{
wrapped_num_spp :  int 1277
}}
\subsection{wrapped_PU_costs}{
\preformatted{
wrapped_PU_costs :  num [1:407] 1 1 1 1 1 1 1 1 1 1 ...
}}
\subsection{wrapped_PU_spp_indices}{
\preformatted{
wrapped_PU_spp_indices : 'data.frame':	3037 obs. of  2 variables:
 $ PU_ID : num  1 2 3 4 5 6 7 8 9 10 ...
 $ spp_ID: num  1 1 2 2 3 3 4 4 5 5 ...
}}
\subsection{wrapped_PU_vector}{
\preformatted{
wrapped_PU_vector :  num [1:3037] 1 2 3 4 5 6 7 8 9 10 ...
}}
\subsection{wrapped_spp_vector}{
\preformatted{
wrapped_spp_vector :  num [1:3037] 1 1 2 2 3 3 4 4 5 5 ...
}}
\subsection{Xu_bdprob}{
\preformatted{
Xu_bdprob : Formal class 'Xu_bd_problem' [package "bdpg"] with 35 slots
}}
\subsection{Xu_dep_and_indep_set}{
\preformatted{
Xu_dep_and_indep_set :  int [1:122] 1 3 5 7 9 11 13 15 17 19 ...
}}
\subsection{Xu_dep_set}{
\preformatted{
Xu_dep_set :  int [1:61] 2 4 6 8 10 12 14 16 18 20 ...
}}
\subsection{Xu_nodes}{
\preformatted{
Xu_nodes : 'data.frame':	122 obs. of  3 variables:
 $ node_ID             : int  1 2 3 4 5 6 7 8 9 10 ...
 $ group_ID            : num  1 1 2 2 3 3 4 4 5 5 ...
 $ dependent_set_member: logi  FALSE TRUE FALSE TRUE FALSE TRUE ...
}}
}

