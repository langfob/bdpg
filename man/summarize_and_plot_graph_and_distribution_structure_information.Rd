% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biodivprobgen_utilities.R
\name{summarize_and_plot_graph_and_distribution_structure_information}
\alias{summarize_and_plot_graph_and_distribution_structure_information}
\title{Compute final PU and species counts and plot degree and abundance distributions.}
\usage{
summarize_and_plot_graph_and_distribution_structure_information(
  PU_spp_pair_indices,
  cor_or_app_label,
  all_correct_node_IDs,
  plot_output_dir,
  spp_col_name,
  PU_col_name,
  presences_col_name
)
}
\arguments{
\item{PU_spp_pair_indices}{2 column data frame of PU IDs vs species IDs,
where each row identifies a the ID of a given species that
occurs on the given planning unit}

\item{cor_or_app_label}{character string for labelling as Correct or Apparent}

\item{all_correct_node_IDs}{numeric vector containing all planning unit IDs
that appear in the correct problem, not to be confused with the set of
planning IDs that appear in the correct \emph{solution}}

\item{plot_output_dir}{character string giving pat to directory where plot
should be written}

\item{spp_col_name}{character string giving species column name in data frames}

\item{PU_col_name}{character string giving planning unit column name in data frames}

\item{presences_col_name}{character string giving column name for species
counts (presences) in data frames}
}
\value{
final_link_counts_for_each_node, i.e., species count for each node, i.e., 2 column data frame of PU_IDs vs. number of species on corresponding PU
}
\description{
Compute final PU and species counts and plot degree and abundance distributions.
}
\details{
Count the number of species on each PU.
 If a PU has no species on it, it won't necessarily be in the
 PU_spp_pair_indices table, so this routine adds the PU back into the table
 with a zero count.

 This means that even though PU_spp_pair_indices could be either a correct
 or an apparent set of PU-spp pairs, all_correct_node_IDs HAS
}
\examples{
\dontrun{
tot_num_nodes = 6
PU_spp_pair_indices = data.frame (PU_ID=1:tot_num_nodes, spp_ID=c(1,1,2,2))
all_correct_node_IDs = 1:tot_num_nodes
final_link_counts =
    clean_up_final_link_counts_for_each_node (PU_spp_pair_indices,
                                              all_correct_node_IDs,
                                              "PU_ID",
                                              "freq")
         }

}
