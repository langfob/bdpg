% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_multi_bdprob.R
\name{gen_multi_bdprob}
\alias{gen_multi_bdprob}
\title{Generate a new biodiversity problem by modifying or combining existing
problem(s)}
\usage{
gen_multi_bdprob(parameters, compute_network_metrics_for_this_prob,
  wrap_lognormal_dist_around_Xu, read_Xu_problem_from_Xu_bench_file,
  infile_name, given_correct_solution_cost, max_allowed_num_spp,
  bdpg_error_codes, integerize, bdprob_1 = NULL)
}
\arguments{
\item{parameters}{parameters list for the run, usually derived from project.yaml
and can have a varying number and set of elements depending on the run}

\item{compute_network_metrics_for_this_prob}{boolean indicating whether to
compute network metrics for the current problem; TRUE indicates to
compute one or more network metrics specified elsewhere and FALSE
indicate not compute any network metrics for the current problem.}

\item{wrap_lognormal_dist_around_Xu}{boolean indicating whether to wrap a
lognormal distribution around a base Xu problem; TRUE implies wrapping
should be done; FALSE implies not}

\item{infile_name}{string containing the name of the Xu benchmark file to
read a problem from if reading from a Xu benchmark file}

\item{given_correct_solution_cost}{boolean indicating whether the correct
cost of the correct optimum solution is known; TRUE implies that it is
known}

\item{max_allowed_num_spp}{maximum number of species allowed in generating
a problem from scratch (particularly of use when trying to do smaller,
faster tests in development)}

\item{bdpg_error_codes}{list of error names and corresponding error codes}

\item{integerize}{function to use in converting floats to ints}

\item{read_Xu_problem_from_Xu_file}{boolean indicating whether to read a
Xu problem from one of Xu's benchmark problem files; TRUE implies that
the problem should be read from one of those files; FALSE implies that
the problem should be generated from scratch}
}
\value{
Returns a multi-BD_Prob
}
\description{
Sometimes it may be useful to combine 2 or more bd problems into
 one bigger problem since it may have the potential to produce a
 more difficult compound problem.
 If nothing else, it bears some resemblance to having a larger
 landscape with subregion characteristics.
}
\details{
This function is intended to allow either wrapping a distribution around
 an existing problem or combining two problems.  However, at the moment,
 it only allows wrapping.  Combining two problems is pretty straightforward
 but has not been implemented yet and probably won't be implemented unless
 there is a demand for it.

Dummy code that was in here to demonstrate high-level parts of that
 combination (i.e., combine_2_bdprobs()) have been removed but can be
 found in github versions of the code up until around commit 1c0fbba6
 on Feb 4, 2017.
}
\section{Local Variable Structures and examples}{

Here is the output of str() for each variable visible in the function.
Note that the particular counts and values given are just examples to show
what the data might look like.

\subsection{bdpg_error_codes}{
\preformatted{
bdpg_error_codes : List of 6
 $ ERROR_STATUS_num_inside_or_within_group_links_less_than_one: num 1001
 $ ERROR_STATUS_optimal_solution_is_not_optimal               : num 1002
 $ ERROR_STATUS_num_nodes_per_group_must_be_at_least_2        : num 1003
 $ ERROR_STATUS_duplicate_spp_in_Xu_input_file                : num 1004
 $ ERROR_STATUS_unknown_spp_occ_FP_error_type                 : num 1005
 $ ERROR_STATUS_unknown_spp_occ_FN_error_type                 : num 1006
}}
\subsection{bdprob_1}{
\preformatted{
bdprob_1 : Formal class 'Xu_bd_problem' [package "bdpg"] with 35 slots
}}
\subsection{combined_bdprob}{
\preformatted{
combined_bdprob : Formal class 'Xu_wrapped_bd_problem' [package "bdpg"] with 36 slots
}}
\subsection{given_correct_solution_cost}{
\preformatted{
given_correct_solution_cost :  num 420
}}
\subsection{infile_name}{
\preformatted{
infile_name :  chr ""
}}
\subsection{integerize}{
\preformatted{
integerize : function (x, digits = 0)
}}
\subsection{max_allowed_num_spp}{
\preformatted{
max_allowed_num_spp :  num 2000
}}
\subsection{parameters}{
\preformatted{
parameters : List of 66
 $ summary_without_run_id_filename                           : chr "/Users/bill/tzar/outputdata/biodivprobgen/default_runset/1837_marxan_simulated_annealing.inprogress/prob_diff_results_with_0_ru"| __truncated__
 ...
 $ fullOutputDir_NO_slash                                    : chr "/Users/bill/tzar/outputdata/biodivprobgen/default_runset/1837_marxan_simulated_annealing.inprogress"
}}
\subsection{read_Xu_problem_from_Xu_file}{
\preformatted{
read_Xu_problem_from_Xu_file :  logi FALSE
}}
\subsection{starting_dir}{
\preformatted{
starting_dir :  chr "/Users/bill/tzar/outputdata/biodivprobgen/default_runset/1837_marxan_simulated_annealing.inprogress"
}}
\subsection{wrap_lognormal_dist_around_Xu}{
\preformatted{
wrap_lognormal_dist_around_Xu :  logi TRUE
}}
}

