% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biodivprobgen_initialization.R
\name{create_global_constants}
\alias{create_global_constants}
\title{Helper function to create object to hold global constants}
\usage{
create_global_constants()
}
\description{
When I try to create an instance of the Global_Constants_v01 class outside
 of the bdpg package (e.g., in bdpgxupaper), I can't get R to recognize
 the class, even though the bdpg package is imported.  I've tried a bunch
 of different ways to trick R into recognizing it, but none of them have
 worked except wrapping the creation inside a bdpg function and exporting
 that function.  This is the wrapper function that I created to do that.
}
\section{Attempts That Failed}{


 Just to document what I tried, here are the different bits of code that I
 stuck in bdpgxupaper's mainline function and the errors they caused, some
 at run time and others at build time.

\enumerate{
 \item{\strong{Direct use of assign \emph{without} bdpg package qualification}

 Inserting the following command in the main function:
     \preformatted{
     assign("GC", new ("Global_Constants_v01"), envir = .GlobalEnv)}
     caused the following runtime error message:
     \preformatted{
     Error in getClass(Class, where = topenv(parent.frame())) :
       “Global_Constants_v01” is not a defined class
     Called from: getClass(Class, where = topenv(parent.frame()))
     }}
 \item{\strong{Direct use of assign \emph{with} bdpg package qualification}

 Inserting the following command in the main function:
     \preformatted{
     assign("GC", new ("bdpg::Global_Constants_v01"), envir = .GlobalEnv)}
     caused the following runtime error message:
     \preformatted{
     Error in getClass(Class, where = topenv(parent.frame())) :
       “bdpg::Global_Constants_v01” is not a defined class
     Called from: getClass(Class, where = topenv(parent.frame()))
     }}
 \item{\strong{Leaving bdpg qualifier but adding @import to main function documentation}

 Leaving the "\code{new ("bdpg::Global_Constants_v01")...}" and inserting
 the following roxygen command in the main function's documentation:
     \preformatted{
      @import bdpg::Global_Constants_v01
      xu_paper_main (parameters)
      ...}
     caused the following BUILD error message:
     \preformatted{
     ==> devtools::document(roclets=c('rd', 'collate', 'namespace'))

     Updating bdpgxupaper documentation
     Loading bdpgxupaper
     Writing NAMESPACE
     Warning messages:
     1: In loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘#'’
     2: In loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘@export’
     3: In loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘bdpg::Global_Constants_v01’
     Documentation completed

     ==> R CMD INSTALL --preclean --no-multiarch --with-keep.source bdpgxupaper

     * installing to library ‘/Users/bill/D/R_libraries’
     * installing *source* package ‘bdpgxupaper’ ...
     ** R
     ** preparing package for lazy loading
     Error in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘bdpg::Global_Constants_v01’
     ERROR: lazy loading failed for package ‘bdpgxupaper’
     * removing ‘/Users/bill/D/R_libraries/bdpgxupaper’
     * restoring previous ‘/Users/bill/D/R_libraries/bdpgxupaper’

     Exited with status 1.
      }}

 \item{\strong{Leaving bdpg qualifier but adding @import outside main function documentation}

 Leaving the "\code{new ("bdpg::Global_Constants_v01")...}" and inserting
 the following roxygen command at the very start of the main function's file
  but not part of the function's documentation:
     \preformatted{
      @import bdpg::Global_Constants_v01
      ...}
     caused the following BUILD error message:
     \preformatted{
     ==> devtools::document(roclets=c('rd', 'collate', 'namespace'))

     Updating bdpgxupaper documentation
     Loading bdpgxupaper
     Writing xu_paper_main.Rd
     Writing NAMESPACE
     Warning message:
     In loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘bdpg::Global_Constants_v01’
     Documentation completed

     ==> R CMD INSTALL --preclean --no-multiarch --with-keep.source bdpgxupaper

     * installing to library ‘/Users/bill/D/R_libraries’
     * installing *source* package ‘bdpgxupaper’ ...
     ** R
     ** preparing package for lazy loading
     Error in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) :
       there is no package called ‘bdpg::Global_Constants_v01’
     ERROR: lazy loading failed for package ‘bdpgxupaper’
     * removing ‘/Users/bill/D/R_libraries/bdpgxupaper’
     * restoring previous ‘/Users/bill/D/R_libraries/bdpgxupaper’

     Exited with status 1.
      }}

 \item{\strong{Leaving bdpg qualifier but importing the class explicitly in DESCRIPTION}

 Leaving the "\code{new ("bdpg::Global_Constants_v01")...}" and inserting
 \code{bdpg::Global_Constants_v01} in the DESCRIPTION file with the other
 imports:
     \preformatted{
     Imports:
         bdpg,
         bdpg::Global_Constants_v01
     Suggests:
     }
     caused the following BUILD error message:
     \preformatted{
     ==> devtools::document(roclets=c('rd', 'collate', 'namespace'))

     Updating bdpgxupaper documentation
     Loading bdpgxupaper
     Invalid DESCRIPTION:
     Malformed Depends or Suggests or Imports or Enhances field.
     Offending entries:
       bdpg::Global_Constants_v01
     Entries must be names of packages optionally followed by '<=' or '>=',
     white space, and a valid version number in parentheses.

     See section 'The DESCRIPTION file' in the 'Writing R Extensions'
     manual.

     Error in (function (dep_name, dep_ver = NA, dep_compare = NA)  :
       Dependency package bdpg::Global_Constants_v01 not available.
     Calls: suppressPackageStartupMessages ... <Anonymous> -> load_all -> load_imports -> mapply -> <Anonymous>
     Execution halted

     Exited with status 1.
      }}
      }
}

\seealso{
\code{"\linkS4class{Global_Constants_v01}"}
}
