# Generated by roxygen2: do not edit by hand

export(EF)
export(act_on_loaded_existing_tzar_run)
export(always_set_new_or_forced_rand_seed)
export(compute_RS_solution_cost_scores_wrt_COR_costs_vec)
export(compute_and_verify_rep_scores_wrt)
export(compute_confusion_matrix_based_scores)
export(compute_euc_out_err_frac)
export(compute_marxan_species_penalty_factor)
export(compute_num_spp_covered_by_solution)
export(compute_rep_fraction)
export(create_Xu_problem_from_scratch)
export(create_Xu_problem_from_scratch_given_4_Xu_metaparams)
export(create_Xu_problem_from_scratch_given_params)
export(create_Xu_problem_from_scratch_not_using_4_Xu_metaparams)
export(create_wrapping_PU_spp_table)
export(do_APP_simple_richness_analysis_and_output)
export(do_COR_simple_richness_analysis_and_output)
export(do_Greedy_analysis_and_output)
export(do_gurobi_analysis_and_output)
export(do_marxan_analysis_and_output)
export(do_rs_analysis_and_output)
export(fix_0_length_list_elements)
export(gen_20_basic_variants_including_cost_error)
export(gen_4_basic_variants)
export(gen_6_basic_variants)
export(gen_bdprob)
export(gen_multi_bdprob)
export(gen_new_seed_from_cur_time)
export(gen_single_bdprob_APP)
export(gen_single_bdprob_COR)
export(gen_single_bdprob_COR_from_scratch_or_Xu_bench_file)
export(gen_single_bdprob_WRAP)
export(gen_wrapped_bdprob_COR)
export(get_UUID_from_file_path)
export(get_current_os)
export(get_forced_seed_value_if_necessary)
export(get_integerize_function)
export(init_for_bdpg)
export(init_test_parameters)
export(list_as_data_frame_with_0_length_vals_replaced_by_NA)
export(list_with_0_length_vals_replaced_by_NA)
export(load_existing_tzar_run_from_glass)
export(look_up_object_by_UUID)
export(read_Xu_problem_from_Xu_file)
export(repro_RSrun)
export(repro_do_Greedy_analysis_and_output)
export(run_gurobi)
export(run_marxan)
export(safe_sample)
export(search_for_approximating_lognormal)
export(set_marxan_controls_and_run_marxan)
export(set_new_or_forced_rand_seed_if_necessary)
export(set_up_for_and_run_gurobi_APP)
export(set_up_for_and_run_gurobi_COR)
export(set_up_for_and_run_marxan)
export(set_up_for_and_run_marxan_APP)
export(set_up_for_and_run_marxan_COR)
export(set_up_for_and_run_simple_richness_APP)
export(set_up_for_and_run_simple_richness_COR)
export(single_action_using_tzar_reps)
export(stop_bdpg)
export(strip_trailing_slash)
export(summarize_pu_and_spp_dist_data_from_marxan_puvspr_input_file)
export(summarize_pu_and_spp_dist_data_from_pu_spp_amt_df)
export(test_compute_various_link_cts)
export(test_create_Xu_problem_from_scratch_given_params)
export(test_create_Xu_problem_from_scratch_not_using_4_Xu_metaparams)
export(test_create_allowable_size_Xu_problem_from_scratch)
export(test_gen_single_bdprob)
export(test_gen_single_bdprob_COR_from_scratch_or_Xu_bench_file)
export(test_get_full_run_random_seed)
export(touch)
export(value_or_1_if_null)
export(value_or_FALSE_if_null)
export(vb)
export(verify_that_generated_solution_really_is_a_solution)
export(vn)
export(wrap_abundance_dist_around_Xu_problem)
export(wrap_abundances_around_eligible_set)
export(write_all_marxan_input_files)
export(write_all_marxan_input_files_from_vectors)
export(write_marxan_pu.dat_input_file)
export(write_marxan_pu.dat_input_file_from_vectors)
export(write_marxan_puvspr.dat_input_file)
export(write_marxan_spec.dat_input_file)
export(write_marxan_spec.dat_input_file_from_vectors)
export(write_network_to_marxan_files)
import(igraph)
importFrom(bipartite,networklevel)
importFrom(grDevices,dev.off)
importFrom(grDevices,pdf)
importFrom(graphics,abline)
importFrom(graphics,curve)
importFrom(graphics,hist)
importFrom(graphics,lines)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(graphics,text)
importFrom(methods,new)
importFrom(methods,representation)
importFrom(methods,show)
importFrom(stats,dnorm)
importFrom(stats,loess)
importFrom(stats,median)
importFrom(stats,optim)
importFrom(stats,rlnorm)
importFrom(stats,runif)
importFrom(utils,combn)
importFrom(utils,head)
importFrom(utils,read.csv)
importFrom(utils,sessionInfo)
importFrom(utils,tail)
importFrom(utils,write.csv)
importFrom(utils,write.table)
